name: BeiDou Nightly Workflow

on:
  schedule:
    # 这个 cron 表达式表示每天的 21:00 UTC 触发
    - cron: '0 21 * * *'

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE: beidou-server
  FRONTEND_IMAGE: beidou-ui

concurrency: 
  group: ${{github.workflow}} - ${{github.ref}}
  cancel-in-progress: true

jobs:
  Backend:
    runs-on: ubuntu-latest
    permissions:
        contents: read
        packages: write
        id-token: write
        # attestations: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-backend-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-backend-buildx-

      - name: Set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >> ${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Build and push
        id: push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: Dockerfile-server
          tags: ${{ env.REGISTRY }}/${{ env.OWNER_LC }}/${{ env.BACKEND_IMAGE }}:nightly
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            CACHEBUST=${{ github.run_id }}
    #   - name: Generate artifact attestation
    #     uses: actions/attest-build-provenance@v1
    #     with:
    #       subject-name: ${{ env.REGISTRY }}/${{ env.OWNER_LC }}/${{ env.BACKEND_IMAGE }}
    #       subject-digest: ${{ steps.push.outputs.digest }}
    #       push-to-registry: true

  Frontend:
    runs-on: ubuntu-latest
    permissions:
        contents: read
        packages: write
        id-token: write
        # attestations: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-frontend-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-frontend-buildx-

      - name: Set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >> ${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Build and push
        id: push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: Dockerfile-ui
          tags: ${{ env.REGISTRY }}/${{ env.OWNER_LC }}/${{ env.FRONTEND_IMAGE }}:nightly
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            CACHEBUST=${{ github.run_id }}
    #   - name: Generate artifact attestation
    #     uses: actions/attest-build-provenance@v1
    #     with:
    #       subject-name: ${{ env.REGISTRY }}/${{ env.OWNER_LC }}/${{ env.FRONTEND_IMAGE }}
    #       subject-digest: ${{ steps.push.outputs.digest }}
    #       push-to-registry: true